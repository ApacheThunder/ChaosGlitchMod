/*using Dungeonator;
using System.Collections.Generic;
using UnityEngine;

namespace ChaosGlitchMod {

    public class dave_fucking_around_flow : MonoBehaviour {
        
        private static PrototypeDungeonRoom Gungeon_Normal_Evil_W_Room = ChaosPrefabs.sharedAssets2.LoadAsset<PrototypeDungeonRoom>("gungeon_normal_evil_w_room");
        private static PrototypeDungeonRoom Gungeon_Hub_001 = ChaosPrefabs.sharedAssets2.LoadAsset<PrototypeDungeonRoom>("gungeon_hub_001");

        private static DungeonFlowSubtypeRestriction DaveSubTypeRestrictions = new DungeonFlowSubtypeRestriction() {
            baseCategoryRestriction = PrototypeDungeonRoom.RoomCategory.NORMAL,
            normalSubcategoryRestriction = PrototypeDungeonRoom.RoomNormalSubCategory.TRAP,
            bossSubcategoryRestriction = PrototypeDungeonRoom.RoomBossSubCategory.FLOOR_BOSS,
            specialSubcategoryRestriction = PrototypeDungeonRoom.RoomSpecialSubCategory.UNSPECIFIED_SPECIAL,
            secretSubcategoryRestriction = PrototypeDungeonRoom.RoomSecretSubCategory.UNSPECIFIED_SECRET,
            maximumRoomsOfSubtype = 1
        };

        public static void InitFlow() {

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.name = "Dave_Fuckin_Around_Flow";
            // ChaosDungeonFlows.Dave_Fuckin_Around_Flow.fallbackRoomTable = complex_flow_test.CastleGungeonMergedTable;
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.fallbackRoomTable = BossrushFlows.Bossrush_01_Castle.fallbackRoomTable;
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.phantomRoomTable = BossrushFlows.Bossrush_01_Castle_Modded.phantomRoomTable;
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.subtypeRestrictions = new List<DungeonFlowSubtypeRestriction>(0);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.flowInjectionData = new List<ProceduralFlowModifierData>(0);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.sharedInjectionData = new List<SharedInjectionData>(0);

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.Initialize();

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_00, DaveNode_31);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_01, DaveNode_31);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_02, DaveNode_31);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_03, null);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_04, DaveNode_08);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_05, DaveNode_11);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_06, DaveNode_05);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_07, DaveNode_03);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_08, DaveNode_07);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_09, DaveNode_01);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_10, DaveNode_12);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_11, DaveNode_35);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_12, DaveNode_15);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_13, null);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_14, DaveNode_13);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_15, null);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_16, DaveNode_15);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_17, DaveNode_16);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_18, DaveNode_01);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_19, DaveNode_02);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_20, DaveNode_17);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_21, DaveNode_20);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_22, DaveNode_21);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_23, null);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_24, DaveNode_00);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_25, DaveNode_18);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_26, DaveNode_25);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_27, DaveNode_26);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_28, DaveNode_27);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_29, DaveNode_08);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_30, DaveNode_09);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_31, null);

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.FirstNode = DaveNode_31;

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_32, DaveNode_26);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_33, DaveNode_32);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_34, DaveNode_33);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_35, DaveNode_18);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_36, DaveNode_34);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_37, DaveNode_27);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_38, DaveNode_18);
            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.AddNodeToFlow(DaveNode_39, DaveNode_18);

            ChaosDungeonFlows.Dave_Fuckin_Around_Flow.LoopConnectNodes(DaveNode_03, DaveNode_29);

            
        }

        private static DungeonFlowNode DaveNode_00 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "bfe63741-93d0-49c7-a4b1-8eae63368177",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };


        private static DungeonFlowNode DaveNode_01 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "87d82f71-da21-4337-96df-603b9949cc5a",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_02 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.HUB,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = true,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>() {
                new ChainRule() {
                    form = "n",
                    target = "cn",
                    weight = 0.100000001f,
                    mandatory = false
                },
                new ChainRule() {
                    form = "n",
                    target = "nn",
                    weight = 0.100000001f,
                    mandatory = false
                },
                new ChainRule() {
                    form = "c",
                    target = "cc",
                    weight = 0.100000001f,
                    mandatory = true
                },
                new ChainRule() {
                    form = "nnnn",
                    target = "ncnn",
                    weight = 0,
                    mandatory = true
                }
            },
            minChainLength = 2,
            maxChainLength = 4,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "fa834f3a-a849-4d3d-a853-2a4f636c6554",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_03 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = "A",
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "62c2d38d-a69d-46f0-87bf-067ff5fe42f4",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Chest Room?
        private static DungeonFlowNode DaveNode_04 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.REWARD,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.gungeon_rewardroom_1,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "98c5c869-e2f8-424d-bd66-cf0e8bc14105",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Boss Room. (assign Room table later)
        private static DungeonFlowNode DaveNode_05 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.BOSS,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = beholsterroom01,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "bd71355f-9e14-48d8-b0ab-80fef2137c46",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Exit Room. (may need to specify as override room instead)
        private static DungeonFlowNode DaveNode_06 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.EXIT,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.exit_room_basic,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "a5f06bc0-90dd-4010-b187-6cd5884258a2",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_07 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "e4e74659-20c1-4c8f-82b4-563f94e737cd",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_08 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "1dbb03a5-a668-4c66-a6a6-8a6f0e03ebd7",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_09 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>() {
                new ChainRule() {
                    form = string.Empty,
                    target = string.Empty,
                    weight = 0.100000001f,
                    mandatory = false
                }
            },
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "ab86ec70-ab20-46ae-ba9b-ed00d43f5ddc",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Reward Room (assign override room if doesn't work)
        private static DungeonFlowNode DaveNode_10 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.REWARD,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.gungeon_rewardroom_1,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = string.Empty,
            chainRules = new List<ChainRule>(0),
            minChainLength = 0,
            maxChainLength = 0,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "d82f81be-c11f-4beb-b62f-e72419c46e5e",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Boss Foyer Room.
        private static DungeonFlowNode DaveNode_11 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.SPECIAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            // overrideExactRoom = boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = "n",
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "bdfaba0a-c857-4c91-a515-bdb35743e859",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_12 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "dc014e0e-239f-4893-a7f0-d2119ea39fff",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_13 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = "cap",
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 0,
            maxChildrenToBuild = 0,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "1bda570f-2838-4dcb-a74b-fdca4ab575e2",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_14 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "95fd84dc-d2e5-44ce-bb90-5ad63fa81bdb",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_15 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SELECTOR,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "3e047223-447c-4c38-80d6-a6d05d45f9f7",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_16 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "c325b508-a1f2-4e54-b244-2972ae430630",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_17 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = Gungeon_Normal_Evil_W_Room,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = true,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "cab73038-9341-49f8-a157-32999e03f94e",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_18 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.HUB,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.OPTIONAL,
            overrideExactRoom = Gungeon_Hub_001,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "66875fd8-ef05-4585-b3a4-86213e9a4388",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Refers to a shop prefab that no longer exists. Will use shop room table here instead.
        private static DungeonFlowNode DaveNode_19 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.shop02,
            // overrideRoomTable = demo_stage_flow.shop_room_table,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 0,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "89123d49-cefc-4692-acff-d95b79aa07e4",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_20 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "42747252-f717-422f-bfd2-c9320c8aee68",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_21 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "3b946943-d338-437d-9d9a-a904c2a2cc80",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_22 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "7ef33958-ba99-4747-81d4-a41c2f884bd4",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // This node isn't connected to any other node?
        private static DungeonFlowNode DaveNode_23 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.SECRET,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.OPTIONAL,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = "Secret",
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "2b3b689e-3216-444d-a5cf-dc68c3021f92",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Weird subchain thing that connects to node 23?
        private static DungeonFlowNode DaveNode_24 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SUBCHAIN,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 0.356000006f,
            priority = DungeonFlowNode.NodePriority.OPTIONAL,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>() { "Secret" },
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "8e8e8a78-747d-452c-b5b4-f7aa8a243af7",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_25 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "97dd308e-5159-4f08-9bb3-d5a1db4abc85",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_26 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "d6213f05-9281-4c7c-9d1e-b6ba6be71432",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_27 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "49b715ae-644e-429a-8ea9-f7e0c37cb79d",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_28 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "ffea52ae-fc94-492f-b2a0-17ecec593948",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_29 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "d9f2516c-2e9a-4056-a5d7-479eca4688c9",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_30 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SUBCHAIN,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>() { "A" },
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "8ef2e4ed-864b-42de-8292-b21b93aeea91",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };
        // Entrance
        private static DungeonFlowNode DaveNode_31 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.ENTRANCE,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.elevator_entrance,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "b3740be3-17d1-4e7c-b92c-0233c89941b3",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_32 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "3ab35f40-ac60-4a50-b70f-b17087420ab4",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_33 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "dadd6e2a-6b9e-4472-8d34-4da8009f4ae5",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_34 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "926b5342-73fc-450b-9fd7-4e415309f74e",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_35 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "cb949a5b-0a22-40c0-8298-666aeb7d1388",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        // Reward(Chest) Room. Use override room if it doesn't work
        private static DungeonFlowNode DaveNode_36 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.REWARD,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.gungeon_rewardroom_1,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "0a9c1c38-b14b-4c70-9482-3517fadfdf64",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_37 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SUBCHAIN,
            roomCategory = PrototypeDungeonRoom.RoomCategory.SECRET,
            percentChance = 0.356000006f,
            priority = DungeonFlowNode.NodePriority.OPTIONAL,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>() { "Secret" },
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "8b851621-835a-416f-80d6-a74f553b0193",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_38 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SUBCHAIN,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 0.423999995f,
            priority = DungeonFlowNode.NodePriority.OPTIONAL,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>() { "A" },
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "39478c04-f21d-400b-9c20-01b03f3d85d4",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };

        private static DungeonFlowNode DaveNode_39 = new DungeonFlowNode(ChaosDungeonFlows.Dave_Fuckin_Around_Flow) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.SUBCHAIN,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>() { "A" },
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "d7409122-d1fb-4f54-ab3a-b1f80366942f",
            flow = ChaosDungeonFlows.Dave_Fuckin_Around_Flow,
        };
    }
}*/

