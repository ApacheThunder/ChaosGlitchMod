using Dungeonator;
using System.Collections.Generic;
using UnityEngine;

namespace ChaosGlitchMod {

    public class demo_stage_flow : MonoBehaviour {

        private static DungeonFlowSubtypeRestriction DemoStageSubTypeRestrictions = new DungeonFlowSubtypeRestriction() {
            baseCategoryRestriction = PrototypeDungeonRoom.RoomCategory.NORMAL,
            normalSubcategoryRestriction = PrototypeDungeonRoom.RoomNormalSubCategory.TRAP,
            bossSubcategoryRestriction = PrototypeDungeonRoom.RoomBossSubCategory.FLOOR_BOSS,
            specialSubcategoryRestriction = PrototypeDungeonRoom.RoomSpecialSubCategory.UNSPECIFIED_SPECIAL,
            secretSubcategoryRestriction = PrototypeDungeonRoom.RoomSecretSubCategory.UNSPECIFIED_SECRET,
            maximumRoomsOfSubtype = 1
        };

        public static void InitFlow() {

            ChaosDungeonFlows.DEMO_STAGE_FLOW.name = "DEMO_STAGE_FLOW";
            ChaosDungeonFlows.DEMO_STAGE_FLOW.fallbackRoomTable = ChaosPrefabs.CatacombsRoomTable;
            ChaosDungeonFlows.DEMO_STAGE_FLOW.subtypeRestrictions = new List<DungeonFlowSubtypeRestriction>() { DemoStageSubTypeRestrictions };
            ChaosDungeonFlows.DEMO_STAGE_FLOW.flowInjectionData = new List<ProceduralFlowModifierData>(0);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.sharedInjectionData = new List<SharedInjectionData>(0);

            ChaosDungeonFlows.DEMO_STAGE_FLOW.Initialize();

            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_00, null);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_01, DemoStageNode_08);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_02, DemoStageNode_01);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_03, DemoStageNode_02);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_04, DemoStageNode_06);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_05, DemoStageNode_04);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_06, DemoStageNode_00);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_07, DemoStageNode_06);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_08, DemoStageNode_05);
            ChaosDungeonFlows.DEMO_STAGE_FLOW.AddNodeToFlow(DemoStageNode_09, DemoStageNode_07);

            ChaosDungeonFlows.DEMO_STAGE_FLOW.LoopConnectNodes(DemoStageNode_09, DemoStageNode_08);

            ChaosDungeonFlows.DEMO_STAGE_FLOW.FirstNode = DemoStageNode_00;            
        }

        private static DungeonFlowNode DemoStageNode_00 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.elevator_entrance,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "d9be71d3-8d97-48af-8eda-54aa897862be",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        private static DungeonFlowNode DemoStageNode_01 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.boss_foyer,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "036aafaf-a754-4410-94c5-2c4e5139a5bf",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        private static DungeonFlowNode DemoStageNode_02 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.bossstatuesroom01,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "a0098d24-7733-4baf-82c0-11ce3e068261",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        private static DungeonFlowNode DemoStageNode_03 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.CONNECTOR,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.exit_room_basic,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "f06e0430-437a-481e-9b34-604d145cc77d",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        // Original Room Prefab "StageFight_001" no longer exists. Force it to pull random room from room table instead.
        private static DungeonFlowNode DemoStageNode_04 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "5160f844-ff79-4d19-b813-38496a344e8e",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        // Original Room Prefab "StageFight_002_Easy" no longer exists. Force it to pull random room from room table instead.
        private static DungeonFlowNode DemoStageNode_05 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "0c8ee6c4-31b4-4226-9ddb-90c7eca8f2d3",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };
        
        // Castle_Reward_Room_godrays_001 no longer exists. Substitute with gungeon_rewardroom_1 instead.
        private static DungeonFlowNode DemoStageNode_06 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.REWARD,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = ChaosPrefabs.gungeon_rewardroom_1,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "2de735f8-22aa-4ee0-9cc4-6841182c8715",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        private static DungeonFlowNode DemoStageNode_07 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.SPECIAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = ChaosPrefabs.shop_room_table,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "8aef8326-0006-4504-8646-4fa7f6664e13",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        // Original Room Prefab "StageFight_003" no longer exists. Force it to pull random room from room table instead.
        private static DungeonFlowNode DemoStageNode_08 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "5460810c-546c-471a-8467-0c89cfce0dc9",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };

        // // Original Room Prefab "StageFight_004" no longer exists. Force it to pull random room from room table instead.
        private static DungeonFlowNode DemoStageNode_09 = new DungeonFlowNode(ChaosDungeonFlows.DEMO_STAGE_FLOW) {
            isSubchainStandin = false,
            nodeType = DungeonFlowNode.ControlNodeType.ROOM,
            roomCategory = PrototypeDungeonRoom.RoomCategory.NORMAL,
            percentChance = 1f,
            priority = DungeonFlowNode.NodePriority.MANDATORY,
            overrideExactRoom = null,
            overrideRoomTable = null,
            capSubchain = false,
            subchainIdentifier = string.Empty,
            limitedCopiesOfSubchain = false,
            maxCopiesOfSubchain = 1,
            subchainIdentifiers = new List<string>(0),
            receivesCaps = false,
            isWarpWingEntrance = false,
            handlesOwnWarping = false,
            forcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            loopForcedDoorType = DungeonFlowNode.ForcedDoorType.NONE,
            nodeExpands = false,
            initialChainPrototype = "n",
            chainRules = new List<ChainRule>(0),
            minChainLength = 3,
            maxChainLength = 8,
            minChildrenToBuild = 1,
            maxChildrenToBuild = 1,
            canBuildDuplicateChildren = false,
            parentNodeGuid = string.Empty,
            childNodeGuids = new List<string>(0),
            loopTargetNodeGuid = string.Empty,
            loopTargetIsOneWay = false,
            guidAsString = "10f1e930-a72b-4f12-a313-378622ba01a8",
            flow = ChaosDungeonFlows.DEMO_STAGE_FLOW,
        };
    }
}

